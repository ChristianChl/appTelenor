{"version":3,"file":"ng-zorro-antd-space.js","sources":["../../components/space/space-item.component.ts","../../components/space/space-item.directive.ts","../../components/space/space.component.ts","../../components/space/space.module.ts","../../components/space/types.ts","../../components/space/public-api.ts","../../components/space/ng-zorro-antd-space.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { NzSpaceDirection } from './types';\n\n/**\n * @deprecated NzSpaceItemLegacyComponent will be removed on 12.0.0.\n * @breaking-change 12.0.0\n */\n@Component({\n  selector: 'nz-space-item, [nz-space-item]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: {\n    class: 'ant-space-item'\n  }\n})\nexport class NzSpaceItemLegacyComponent implements OnInit {\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  setDirectionAndSize(direction: NzSpaceDirection, size: number): void {\n    if (direction === 'horizontal') {\n      this.renderer.removeStyle(this.elementRef.nativeElement, 'margin-bottom');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'margin-right', `${size}px`);\n    } else {\n      this.renderer.removeStyle(this.elementRef.nativeElement, 'margin-right');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'margin-bottom', `${size}px`);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[nzSpaceItem]'\n})\nexport class NzSpaceItemDirective {\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzSpaceItemLegacyComponent } from './space-item.component';\nimport { NzSpaceItemDirective } from './space-item.directive';\nimport { NzSpaceAlign, NzSpaceDirection, NzSpaceSize, NzSpaceType } from './types';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'space';\nconst SPACE_SIZE: {\n  [sizeKey in NzSpaceType]: number;\n} = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\n@Component({\n  selector: 'nz-space, [nz-space]',\n  exportAs: 'NzSpace',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-content></ng-content>\n    <ng-template ngFor let-item let-last=\"last\" let-index=\"index\" [ngForOf]=\"items\">\n      <div\n        class=\"ant-space-item\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item\"></ng-container>\n      </div>\n      <span\n        *ngIf=\"nzSplit && !last\"\n        class=\"ant-space-split\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzSplit\" [ngTemplateOutletContext]=\"{ $implicit: index }\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n  host: {\n    class: 'ant-space',\n    '[class.ant-space-horizontal]': 'nzDirection === \"horizontal\"',\n    '[class.ant-space-vertical]': 'nzDirection === \"vertical\"',\n    '[class.ant-space-align-start]': 'mergedAlign === \"start\"',\n    '[class.ant-space-align-end]': 'mergedAlign === \"end\"',\n    '[class.ant-space-align-center]': 'mergedAlign === \"center\"',\n    '[class.ant-space-align-baseline]': 'mergedAlign === \"baseline\"',\n    '[style.flex-wrap]': 'nzWrap ? \"wrap\" : null'\n  }\n})\nexport class NzSpaceComponent implements OnChanges, OnDestroy, AfterContentInit {\n  static ngAcceptInputType_nzWrap: BooleanInput;\n\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  @Input() nzDirection: NzSpaceDirection = 'horizontal';\n  @Input() nzAlign?: NzSpaceAlign;\n  @Input() nzSplit: TemplateRef<{ $implicit: number }> | null = null;\n  @Input() @InputBoolean() nzWrap: boolean = false;\n  @Input() @WithConfig() nzSize: NzSpaceSize = 'small';\n\n  /**\n   * @deprecated NzSpaceItemLegacyComponent will be removed on 12.0.0, use NzSpaceItemDirective instead.\n   * @breaking-change 12.0.0\n   */\n  @ContentChildren(NzSpaceItemLegacyComponent) nzSpaceItemComponents!: QueryList<NzSpaceItemLegacyComponent>;\n  @ContentChildren(NzSpaceItemDirective, { read: TemplateRef }) items!: QueryList<TemplateRef<NzSafeAny>>;\n\n  mergedAlign?: NzSpaceAlign;\n  spaceSize: number = SPACE_SIZE.small;\n  private destroy$ = new Subject();\n\n  constructor(public nzConfigService: NzConfigService, private cdr: ChangeDetectorRef) {}\n\n  private updateSpaceItems(): void {\n    const numberSize = typeof this.nzSize === 'string' ? SPACE_SIZE[this.nzSize] : this.nzSize;\n    this.spaceSize = numberSize / (!!this.nzSplit ? 2 : 1);\n    if (this.nzSpaceItemComponents?.length) {\n      warnDeprecation('`nz-space-item` in `nz-space` will be removed in 12.0.0, please use `*nzSpaceItem` instead.');\n      this.nzSpaceItemComponents.forEach(item => {\n        item.setDirectionAndSize(this.nzDirection, this.spaceSize!);\n      });\n    }\n    this.cdr.markForCheck();\n  }\n\n  ngOnChanges(): void {\n    this.updateSpaceItems();\n    this.mergedAlign = this.nzAlign === undefined && this.nzDirection === 'horizontal' ? 'center' : this.nzAlign;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngAfterContentInit(): void {\n    this.updateSpaceItems();\n    this.nzSpaceItemComponents.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateSpaceItems();\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzSpaceItemLegacyComponent } from './space-item.component';\nimport { NzSpaceItemDirective } from './space-item.directive';\nimport { NzSpaceComponent } from './space.component';\n\n@NgModule({\n  declarations: [NzSpaceComponent, NzSpaceItemLegacyComponent, NzSpaceItemDirective],\n  exports: [NzSpaceComponent, NzSpaceItemLegacyComponent, NzSpaceItemDirective],\n  imports: [BidiModule, CommonModule]\n})\nexport class NzSpaceModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport type NzSpaceDirection = 'vertical' | 'horizontal';\nexport type NzSpaceAlign = 'start' | 'end' | 'center' | 'baseline';\nexport type NzSpaceType = 'small' | 'middle' | 'large';\nexport type NzSpaceSize = NzSpaceType | number;\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './space.module';\nexport * from './space.component';\nexport * from './space-item.component';\nexport * from './space-item.directive';\nexport * from './types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}