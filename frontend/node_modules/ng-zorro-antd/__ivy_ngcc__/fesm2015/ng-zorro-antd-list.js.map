{"version":3,"file":"ng-zorro-antd-list.js","sources":["../../components/list/interface.ts","../../components/list/list-item-meta-cell.ts","../../components/list/list-item-meta.component.ts","../../components/list/list-item-cell.ts","../../components/list/list-cell.ts","../../components/list/list.component.ts","../../components/list/list-item.component.ts","../../components/list/list.module.ts","../../components/list/public-api.ts","../../components/list/ng-zorro-antd-list.ts"],"names":["DescriptionComponent","TitleComponent"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport type ColumnCount = 1 | 2 | 3 | 4 | 6 | 8 | 12 | 24;\n\nexport interface NzListGrid {\n  gutter?: number;\n  span?: number;\n  column?: ColumnCount;\n  xs?: ColumnCount;\n  sm?: ColumnCount;\n  md?: ColumnCount;\n  lg?: ColumnCount;\n  xl?: ColumnCount;\n  xxl?: ColumnCount;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nz-list-item-meta-title',\n  exportAs: 'nzListItemMetaTitle',\n  template: `\n    <h4 class=\"ant-list-item-meta-title\">\n      <ng-content></ng-content>\n    </h4>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzListItemMetaTitleComponent {}\n\n@Component({\n  selector: 'nz-list-item-meta-description',\n  exportAs: 'nzListItemMetaDescription',\n  template: `\n    <div class=\"ant-list-item-meta-description\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzListItemMetaDescriptionComponent {}\n\n@Component({\n  selector: 'nz-list-item-meta-avatar',\n  exportAs: 'nzListItemMetaAvatar',\n  template: `\n    <div class=\"ant-list-item-meta-avatar\">\n      <nz-avatar *ngIf=\"nzSrc\" [nzSrc]=\"nzSrc\"></nz-avatar>\n      <ng-content *ngIf=\"!nzSrc\"></ng-content>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzListItemMetaAvatarComponent {\n  @Input() nzSrc?: string;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  NzListItemMetaDescriptionComponent as DescriptionComponent,\n  NzListItemMetaTitleComponent as TitleComponent\n} from './list-item-meta-cell';\n\n@Component({\n  selector: 'nz-list-item-meta, [nz-list-item-meta]',\n  exportAs: 'nzListItemMeta',\n  template: `\n    <!--Old API Start-->\n    <nz-list-item-meta-avatar *ngIf=\"avatarStr\" [nzSrc]=\"avatarStr\"></nz-list-item-meta-avatar>\n    <nz-list-item-meta-avatar *ngIf=\"avatarTpl\">\n      <ng-container [ngTemplateOutlet]=\"avatarTpl\"></ng-container>\n    </nz-list-item-meta-avatar>\n    <!--Old API End-->\n\n    <ng-content select=\"nz-list-item-meta-avatar\"></ng-content>\n\n    <div *ngIf=\"nzTitle || nzDescription || descriptionComponent || titleComponent\" class=\"ant-list-item-meta-content\">\n      <!--Old API Start-->\n      <nz-list-item-meta-title *ngIf=\"nzTitle && !titleComponent\">\n        <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n      </nz-list-item-meta-title>\n      <nz-list-item-meta-description *ngIf=\"nzDescription && !descriptionComponent\">\n        <ng-container *nzStringTemplateOutlet=\"nzDescription\">{{ nzDescription }}</ng-container>\n      </nz-list-item-meta-description>\n      <!--Old API End-->\n\n      <ng-content select=\"nz-list-item-meta-title\"></ng-content>\n      <ng-content select=\"nz-list-item-meta-description\"></ng-content>\n    </div>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NzListItemMetaComponent {\n  avatarStr = '';\n  avatarTpl?: TemplateRef<void>;\n\n  @Input()\n  set nzAvatar(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this.avatarStr = '';\n      this.avatarTpl = value;\n    } else {\n      this.avatarStr = value;\n    }\n  }\n\n  @Input() nzTitle?: string | TemplateRef<void>;\n\n  @Input() nzDescription?: string | TemplateRef<void>;\n\n  @ContentChild(DescriptionComponent) descriptionComponent?: DescriptionComponent;\n  @ContentChild(TitleComponent) titleComponent?: TitleComponent;\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-list-item-meta');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { defer, merge, Observable, of, Subject } from 'rxjs';\nimport { switchMap, take, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'nz-list-item-extra, [nz-list-item-extra]',\n  exportAs: 'nzListItemExtra',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-list-item-extra'\n  }\n})\nexport class NzListItemExtraComponent {\n  constructor() {}\n}\n\n@Component({\n  selector: 'nz-list-item-action',\n  exportAs: 'nzListItemAction',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-template><ng-content></ng-content></ng-template> `\n})\nexport class NzListItemActionComponent {\n  @ViewChild(TemplateRef) templateRef?: TemplateRef<void>;\n  constructor() {}\n}\n\n@Component({\n  selector: 'ul[nz-list-item-actions]',\n  exportAs: 'nzListItemActions',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <li *ngFor=\"let i of actions; let last = last\">\n      <ng-template [ngTemplateOutlet]=\"i\"></ng-template>\n      <em *ngIf=\"!last\" class=\"ant-list-item-action-split\"></em>\n    </li>\n  `,\n  host: {\n    class: 'ant-list-item-action'\n  }\n})\nexport class NzListItemActionsComponent implements OnChanges, OnDestroy {\n  @Input() nzActions: Array<TemplateRef<void>> = [];\n  @ContentChildren(NzListItemActionComponent) nzListItemActions!: QueryList<NzListItemActionComponent>;\n\n  actions: Array<TemplateRef<void>> = [];\n  private destroy$ = new Subject();\n  private inputActionChanges$ = new Subject<null>();\n  private contentChildrenChanges$: Observable<null> = defer(() => {\n    if (this.nzListItemActions) {\n      return of(null);\n    }\n    return this.ngZone.onStable.asObservable().pipe(\n      take(1),\n      switchMap(() => this.contentChildrenChanges$)\n    );\n  });\n\n  constructor(private ngZone: NgZone, private cdr: ChangeDetectorRef) {\n    merge(this.contentChildrenChanges$, this.inputActionChanges$)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        if (this.nzActions.length) {\n          this.actions = this.nzActions;\n        } else {\n          this.actions = this.nzListItemActions.map(action => action.templateRef!);\n        }\n        this.cdr.detectChanges();\n      });\n  }\n\n  ngOnChanges(): void {\n    this.inputActionChanges$.next(null);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'nz-list-empty',\n  exportAs: 'nzListHeader',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <nz-embed-empty [nzComponentName]=\"'list'\" [specificContent]=\"nzNoResult\"></nz-embed-empty> `,\n  host: {\n    class: 'ant-list-empty-text'\n  }\n})\nexport class NzListEmptyComponent {\n  @Input() nzNoResult?: string | TemplateRef<void>;\n}\n\n@Component({\n  selector: 'nz-list-header',\n  exportAs: 'nzListHeader',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-list-header'\n  }\n})\nexport class NzListHeaderComponent {}\n\n@Component({\n  selector: 'nz-list-footer',\n  exportAs: 'nzListFooter',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-list-footer'\n  }\n})\nexport class NzListFooterComponent {}\n\n@Component({\n  selector: 'nz-list-pagination',\n  exportAs: 'nzListPagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-list-pagination'\n  }\n})\nexport class NzListPaginationComponent {}\n\n@Directive({\n  selector: 'nz-list-load-more',\n  exportAs: 'nzListLoadMoreDirective'\n})\nexport class NzListLoadMoreDirective {}\n\n@Directive({\n  selector: 'nz-list[nzGrid]',\n  host: {\n    class: 'ant-list-grid'\n  }\n})\nexport class NzListGridDirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzDirectionVHType, NzSafeAny, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzListGrid } from './interface';\nimport { NzListFooterComponent, NzListLoadMoreDirective, NzListPaginationComponent } from './list-cell';\n\n@Component({\n  selector: 'nz-list, [nz-list]',\n  exportAs: 'nzList',\n  template: `\n    <ng-template #itemsTpl>\n      <div class=\"ant-list-items\">\n        <ng-container *ngFor=\"let item of nzDataSource; let index = index\">\n          <ng-template [ngTemplateOutlet]=\"nzRenderItem\" [ngTemplateOutletContext]=\"{ $implicit: item, index: index }\"></ng-template>\n        </ng-container>\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n\n    <nz-list-header *ngIf=\"nzHeader\">\n      <ng-container *nzStringTemplateOutlet=\"nzHeader\">{{ nzHeader }}</ng-container>\n    </nz-list-header>\n    <ng-content select=\"nz-list-header\"></ng-content>\n\n    <nz-spin [nzSpinning]=\"nzLoading\">\n      <ng-container>\n        <div *ngIf=\"nzLoading && nzDataSource && nzDataSource.length === 0\" [style.min-height.px]=\"53\"></div>\n        <div *ngIf=\"nzGrid && nzDataSource; else itemsTpl\" nz-row [nzGutter]=\"nzGrid.gutter || null\">\n          <div\n            nz-col\n            [nzSpan]=\"nzGrid.span || null\"\n            [nzXs]=\"nzGrid.xs || null\"\n            [nzSm]=\"nzGrid.sm || null\"\n            [nzMd]=\"nzGrid.md || null\"\n            [nzLg]=\"nzGrid.lg || null\"\n            [nzXl]=\"nzGrid.xl || null\"\n            [nzXXl]=\"nzGrid.xxl || null\"\n            *ngFor=\"let item of nzDataSource; let index = index\"\n          >\n            <ng-template [ngTemplateOutlet]=\"nzRenderItem\" [ngTemplateOutletContext]=\"{ $implicit: item, index: index }\"></ng-template>\n          </div>\n        </div>\n        <nz-list-empty *ngIf=\"!nzLoading && nzDataSource && nzDataSource.length === 0\" [nzNoResult]=\"nzNoResult\"></nz-list-empty>\n      </ng-container>\n    </nz-spin>\n\n    <nz-list-footer *ngIf=\"nzFooter\">\n      <ng-container *nzStringTemplateOutlet=\"nzFooter\">{{ nzFooter }}</ng-container>\n    </nz-list-footer>\n    <ng-content select=\"nz-list-footer, [nz-list-footer]\"></ng-content>\n\n    <ng-template [ngTemplateOutlet]=\"nzLoadMore\"></ng-template>\n    <ng-content select=\"nz-list-load-more, [nz-list-load-more]\"></ng-content>\n\n    <nz-list-pagination *ngIf=\"nzPagination\">\n      <ng-template [ngTemplateOutlet]=\"nzPagination\"></ng-template>\n    </nz-list-pagination>\n    <ng-content select=\"nz-list-pagination, [nz-list-pagination]\"></ng-content>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.ant-list-rtl]': `dir === 'rtl'`,\n    '[class.ant-list-vertical]': 'nzItemLayout === \"vertical\"',\n    '[class.ant-list-lg]': 'nzSize === \"large\"',\n    '[class.ant-list-sm]': 'nzSize === \"small\"',\n    '[class.ant-list-split]': 'nzSplit',\n    '[class.ant-list-bordered]': 'nzBordered',\n    '[class.ant-list-loading]': 'nzLoading',\n    '[class.ant-list-something-after-last-item]': 'hasSomethingAfterLastItem'\n  }\n})\nexport class NzListComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n  static ngAcceptInputType_nzBordered: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzSplit: BooleanInput;\n  static ngAcceptInputType_nzGrid: '' | NzListGrid | null | undefined;\n\n  @Input() nzDataSource?: NzSafeAny[];\n  @Input() @InputBoolean() nzBordered = false;\n  @Input() nzGrid?: NzListGrid | '' = '';\n  @Input() nzHeader?: string | TemplateRef<void>;\n  @Input() nzFooter?: string | TemplateRef<void>;\n  @Input() nzItemLayout: NzDirectionVHType = 'horizontal';\n  @Input() nzRenderItem: TemplateRef<void> | null = null;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() nzLoadMore: TemplateRef<void> | null = null;\n  @Input() nzPagination?: TemplateRef<void>;\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() @InputBoolean() nzSplit = true;\n  @Input() nzNoResult?: string | TemplateRef<void>;\n\n  @ContentChild(NzListFooterComponent) nzListFooterComponent!: NzListFooterComponent;\n  @ContentChild(NzListPaginationComponent) nzListPaginationComponent!: NzListPaginationComponent;\n  @ContentChild(NzListLoadMoreDirective) nzListLoadMoreDirective!: NzListLoadMoreDirective;\n\n  hasSomethingAfterLastItem = false;\n  dir: Direction = 'ltr';\n  private itemLayoutNotifySource = new BehaviorSubject<NzDirectionVHType>(this.nzItemLayout);\n  private destroy$ = new Subject<void>();\n\n  get itemLayoutNotify$(): Observable<NzDirectionVHType> {\n    return this.itemLayoutNotifySource.asObservable();\n  }\n\n  constructor(private elementRef: ElementRef, @Optional() private directionality: Directionality) {\n    // TODO: move to host after View Engine deprecation\n    this.elementRef.nativeElement.classList.add('ant-list');\n  }\n  ngOnInit(): void {\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n    });\n  }\n\n  getSomethingAfterLastItem(): boolean {\n    return !!(\n      this.nzLoadMore ||\n      this.nzPagination ||\n      this.nzFooter ||\n      this.nzListFooterComponent ||\n      this.nzListPaginationComponent ||\n      this.nzListLoadMoreDirective\n    );\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzItemLayout) {\n      this.itemLayoutNotifySource.next(this.nzItemLayout);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.itemLayoutNotifySource.unsubscribe();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngAfterContentInit(): void {\n    this.hasSomethingAfterLastItem = this.getSomethingAfterLastItem();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NzDirectionVHType } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subscription } from 'rxjs';\nimport { NzListItemExtraComponent } from './list-item-cell';\nimport { NzListComponent } from './list.component';\n\n@Component({\n  selector: 'nz-list-item, [nz-list-item]',\n  exportAs: 'nzListItem',\n  template: `\n    <ng-template #actionsTpl>\n      <ul nz-list-item-actions *ngIf=\"nzActions && nzActions.length > 0\" [nzActions]=\"nzActions\"></ul>\n      <ng-content select=\"nz-list-item-actions, [nz-list-item-actions]\"></ng-content>\n    </ng-template>\n    <ng-template #contentTpl>\n      <ng-content select=\"nz-list-item-meta, [nz-list-item-meta]\"></ng-content>\n      <ng-content></ng-content>\n      <ng-container *ngIf=\"nzContent\">\n        <ng-container *nzStringTemplateOutlet=\"nzContent\">{{ nzContent }}</ng-container>\n      </ng-container>\n    </ng-template>\n    <ng-template #extraTpl>\n      <ng-content select=\"nz-list-item-extra, [nz-list-item-extra]\"></ng-content>\n    </ng-template>\n    <ng-template #simpleTpl>\n      <ng-template [ngTemplateOutlet]=\"contentTpl\"></ng-template>\n      <ng-template [ngTemplateOutlet]=\"nzExtra\"></ng-template>\n      <ng-template [ngTemplateOutlet]=\"extraTpl\"></ng-template>\n      <ng-template [ngTemplateOutlet]=\"actionsTpl\"></ng-template>\n    </ng-template>\n\n    <ng-container *ngIf=\"isVerticalAndExtra; else simpleTpl\">\n      <div class=\"ant-list-item-main\">\n        <ng-template [ngTemplateOutlet]=\"contentTpl\"></ng-template>\n        <ng-template [ngTemplateOutlet]=\"actionsTpl\"></ng-template>\n      </div>\n      <nz-list-item-extra *ngIf=\"nzExtra\">\n        <ng-template [ngTemplateOutlet]=\"nzExtra\"></ng-template>\n      </nz-list-item-extra>\n      <ng-template [ngTemplateOutlet]=\"extraTpl\"></ng-template>\n    </ng-container>\n  `,\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzListItemComponent implements OnDestroy, AfterViewInit {\n  static ngAcceptInputType_nzNoFlex: BooleanInput;\n\n  @Input() nzActions: Array<TemplateRef<void>> = [];\n  @Input() nzContent?: string | TemplateRef<void>;\n  @Input() nzExtra: TemplateRef<void> | null = null;\n  @Input() @InputBoolean() @HostBinding('class.ant-list-item-no-flex') nzNoFlex: boolean = false;\n\n  @ContentChild(NzListItemExtraComponent) listItemExtraDirective?: NzListItemExtraComponent;\n\n  private itemLayout?: NzDirectionVHType;\n  private itemLayout$?: Subscription;\n\n  get isVerticalAndExtra(): boolean {\n    return this.itemLayout === 'vertical' && (!!this.listItemExtraDirective || !!this.nzExtra);\n  }\n\n  constructor(elementRef: ElementRef, renderer: Renderer2, private parentComp: NzListComponent, private cdr: ChangeDetectorRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-list-item');\n  }\n\n  ngAfterViewInit(): void {\n    this.itemLayout$ = this.parentComp.itemLayoutNotify$.subscribe(val => {\n      this.itemLayout = val;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.itemLayout$) {\n      this.itemLayout$.unsubscribe();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\n\nimport {\n  NzListEmptyComponent,\n  NzListFooterComponent,\n  NzListGridDirective,\n  NzListHeaderComponent,\n  NzListLoadMoreDirective,\n  NzListPaginationComponent\n} from './list-cell';\nimport { NzListItemActionComponent, NzListItemActionsComponent, NzListItemExtraComponent } from './list-item-cell';\nimport { NzListItemMetaAvatarComponent, NzListItemMetaDescriptionComponent, NzListItemMetaTitleComponent } from './list-item-meta-cell';\nimport { NzListItemMetaComponent } from './list-item-meta.component';\nimport { NzListItemComponent } from './list-item.component';\nimport { NzListComponent } from './list.component';\n\nconst DIRECTIVES = [\n  NzListComponent,\n  NzListHeaderComponent,\n  NzListFooterComponent,\n  NzListPaginationComponent,\n  NzListEmptyComponent,\n  NzListItemComponent,\n  NzListItemMetaComponent,\n  NzListItemMetaTitleComponent,\n  NzListItemMetaDescriptionComponent,\n  NzListItemMetaAvatarComponent,\n  NzListItemActionsComponent,\n  NzListItemActionComponent,\n  NzListItemExtraComponent,\n  NzListLoadMoreDirective,\n  NzListGridDirective\n];\n\n@NgModule({\n  imports: [BidiModule, CommonModule, NzSpinModule, NzGridModule, NzAvatarModule, NzOutletModule, NzEmptyModule],\n  declarations: [DIRECTIVES],\n  exports: [DIRECTIVES]\n})\nexport class NzListModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './interface';\nexport { NzListItemMetaComponent } from './list-item-meta.component';\nexport { NzListItemComponent } from './list-item.component';\nexport { NzListComponent } from './list.component';\nexport { NzListModule } from './list.module';\nexport * from './list-cell';\nexport * from './list-item-cell';\nexport * from './list-item-meta-cell';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}